{"ast":null,"code":"\"use client\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){setUser(storedUser);}},[]);const login=email=>{setUser(email);localStorage.setItem('user',email);};const logout=()=>{setUser(null);localStorage.removeItem('user');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","storedUser","localStorage","getItem","login","email","setItem","logout","removeItem","Provider","value","useAuth","context","Error"],"sources":["C:/Users/Swapy/Desktop/Git Clone/movie-watchlist-app/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { createContext, useState, useContext, useEffect } from 'react'\r\n\r\ninterface AuthContextType {\r\n  user: string | null\r\n  login: (email: string) => void\r\n  logout: () => void\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user')\r\n    if (storedUser) {\r\n      setUser(storedUser)\r\n    }\r\n  }, [])\r\n\r\n  const login = (email: string) => {\r\n    setUser(email)\r\n    localStorage.setItem('user', email)\r\n  }\r\n\r\n  const logout = () => {\r\n    setUser(null)\r\n    localStorage.removeItem('user')\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}"],"mappings":"AAAA,YAAY,CAEZ,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAQ7E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAgB,IAAI,CAAC,CAErDE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACdD,OAAO,CAACC,UAAU,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,KAAK,CAAIC,KAAa,EAAK,CAC/BL,OAAO,CAACK,KAAK,CAAC,CACdH,YAAY,CAACI,OAAO,CAAC,MAAM,CAAED,KAAK,CAAC,CACrC,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBP,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,mBACEf,IAAA,CAACC,WAAW,CAACe,QAAQ,EAACC,KAAK,CAAE,CAAEX,IAAI,CAAEK,KAAK,CAAEG,MAAO,CAAE,CAAAT,QAAA,CAClDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAa,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGtB,UAAU,CAACI,WAAW,CAAC,CACvC,GAAIkB,OAAO,GAAKjB,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAkB,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}