{"ast":null,"code":"\"use client\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MovieContext=/*#__PURE__*/createContext(undefined);const API_KEY=process.env.REACT_APP_API_KEY;export const MovieProvider=_ref=>{let{children}=_ref;const[watchlist,setWatchlist]=useState({});useEffect(()=>{const storedWatchlist=localStorage.getItem('watchlist');if(storedWatchlist){setWatchlist(JSON.parse(storedWatchlist));}},[]);const addToWatchlist=(email,movie)=>{setWatchlist(prev=>{const newWatchlist={...prev,[email]:[...(prev[email]||[]),movie]};localStorage.setItem('watchlist',JSON.stringify(newWatchlist));return newWatchlist;});};const removeFromWatchlist=(email,movieId)=>{setWatchlist(prev=>{const newWatchlist={...prev,[email]:prev[email].filter(movie=>movie.imdbID!==movieId)};localStorage.setItem('watchlist',JSON.stringify(newWatchlist));return newWatchlist;});};const searchMovies=async query=>{const response=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${query}`);const data=await response.json();return data.Search||[];};const getMovieDetails=async id=>{const response=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}&plot=full`);const data=await response.json();return data;};return/*#__PURE__*/_jsx(MovieContext.Provider,{value:{watchlist,addToWatchlist,removeFromWatchlist,searchMovies,getMovieDetails},children:children});};export const useMovie=()=>{const context=useContext(MovieContext);if(context===undefined){throw new Error('useMovie must be used within a MovieProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","MovieContext","undefined","API_KEY","process","env","REACT_APP_API_KEY","MovieProvider","_ref","children","watchlist","setWatchlist","storedWatchlist","localStorage","getItem","JSON","parse","addToWatchlist","email","movie","prev","newWatchlist","setItem","stringify","removeFromWatchlist","movieId","filter","imdbID","searchMovies","query","response","fetch","data","json","Search","getMovieDetails","id","Provider","value","useMovie","context","Error"],"sources":["C:/Users/Swapy/Desktop/Git Clone/movie-watchlist-app/src/contexts/MovieContext.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { createContext, useState, useContext, useEffect } from 'react'\r\n\r\nexport interface Movie {\r\n  imdbID: string\r\n  Title: string\r\n  Year: string\r\n  Poster: string\r\n}\r\n\r\nexport interface MovieDetails extends Movie {\r\n  Plot: string\r\n}\r\n\r\ninterface MovieContextType {\r\n  watchlist: { [email: string]: Movie[] }\r\n  addToWatchlist: (email: string, movie: Movie) => void\r\n  removeFromWatchlist: (email: string, movieId: string) => void\r\n  searchMovies: (query: string) => Promise<Movie[]>\r\n  getMovieDetails: (id: string) => Promise<MovieDetails>\r\n}\r\n\r\nconst MovieContext = createContext<MovieContextType | undefined>(undefined)\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nexport const MovieProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [watchlist, setWatchlist] = useState<{ [email: string]: Movie[] }>({})\r\n\r\n  useEffect(() => {\r\n    const storedWatchlist = localStorage.getItem('watchlist')\r\n    if (storedWatchlist) {\r\n      setWatchlist(JSON.parse(storedWatchlist))\r\n    }\r\n  }, [])\r\n\r\n  const addToWatchlist = (email: string, movie: Movie) => {\r\n    setWatchlist((prev) => {\r\n      const newWatchlist = {\r\n        ...prev,\r\n        [email]: [...(prev[email] || []), movie],\r\n      }\r\n      localStorage.setItem('watchlist', JSON.stringify(newWatchlist))\r\n      return newWatchlist\r\n    })\r\n  }\r\n\r\n  const removeFromWatchlist = (email: string, movieId: string) => {\r\n    setWatchlist((prev) => {\r\n      const newWatchlist = {\r\n        ...prev,\r\n        [email]: prev[email].filter((movie) => movie.imdbID !== movieId),\r\n      }\r\n      localStorage.setItem('watchlist', JSON.stringify(newWatchlist))\r\n      return newWatchlist\r\n    })\r\n  }\r\n\r\n  const searchMovies = async (query: string): Promise<Movie[]> => {\r\n    const response = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${query}`)\r\n    const data = await response.json()\r\n    return data.Search || []\r\n  }\r\n\r\n  const getMovieDetails = async (id: string): Promise<MovieDetails> => {\r\n    const response = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}&plot=full`)\r\n    const data = await response.json()\r\n    return data as MovieDetails\r\n  }\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{ watchlist, addToWatchlist, removeFromWatchlist, searchMovies, getMovieDetails }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useMovie = () => {\r\n  const context = useContext(MovieContext)\r\n  if (context === undefined) {\r\n    throw new Error('useMovie must be used within a MovieProvider')\r\n  }\r\n  return context\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}